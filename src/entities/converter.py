
from src.entities.qcircuit import QCircuit

class Converter:
  def to_qiskit(self, qcircuit: QCircuit):
    size = qcircuit.size
    gate_names = list(set(map(lambda op: op.__class__.__name__, qcircuit.operations)))
    gate_names_arr = filter(lambda name: name != 'M', gate_names) # not in instruction_names
    gate_names_str = list(map(lambda name: name + 'Gate', gate_names_arr))
    gate_names_str = ', '.join(gate_names_str)

    qiskit_string = '\n# QuantumCircuit (Qiskit) generated by QAlgebra\n'
    qiskit_string += '\nfrom qiskit import QuantumCircuit\n'
    qiskit_string += f'from qiskit.circuit.library.standard_gates import {gate_names_str}\n\n'
    qiskit_string += f'# Define the circuit\n'
    qiskit_string += f'qc = QuantumCircuit({size}, {size})\n\n' # TODO: Use only necessary classical bits

    added_vars = []
    var_lines = []
    apply_lines = []
    for operation in qcircuit.operations:
      if operation.__class__.__name__ != 'M': # not in instruction_names
        name_var = f'{operation.__class__.__name__.lower()}_gate'
        gate_line = f' = {operation.__class__.__name__}Gate()'
        n_controls = len(operation.controls)
        if n_controls > 0:
          name_var = f'c{n_controls}{name_var}'
          gate_line = f'{gate_line}.control({n_controls})'

        if not name_var in added_vars:
          added_vars.append(name_var)
          gate_line = f'{name_var}{gate_line}'
          var_lines.append(gate_line)

        for target in operation.targets:
          apply_lines.append(f'qc.append({name_var}, {operation.controls + [target]})')

      else: # apply instruction
        apply_lines.append(f'qc.measure({operation.targets}, {operation.targets})')

    if len(var_lines) > 0:
      qiskit_string += '# Define the required gates\n'
      qiskit_string += '\n'.join(var_lines) + '\n\n'
    if len(apply_lines) > 0:
      qiskit_string += '# Apply the gates and measurements\n'
      qiskit_string += '\n'.join(apply_lines) + '\n\n'

    return qiskit_string
      